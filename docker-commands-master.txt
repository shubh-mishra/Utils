Containers:
===========
* docker build . : Build a Dockerfile and create your own Image based on the file
    o -t NAME:TAG : Assign a NAME and a TAG to an image
* docker run IMAGE_NAME : Create and start a new container based on image IMAGENAME (or
use the image id)
    o --name NAME : Assign a NAME to the container. The name can be used for stopping and
removing etc.
    o -d : Run the container in detached mode - i.e. output printed by the container is not
visible, the command prompt / terminal does NOT wait for the container to stop
    o -it : Run the container in "interactive" mode - the container / application is then
prepared to receive input via the command prompt / terminal. You can stop the
container with CTRL + C when using the -it flag
    o --rm : Automatically remove the container when it's stopped
* docker ps : List all running containers
    o -a : List all containers - including stopped ones
* docker images : List all locally stored images
* docker rm CONTAINER : Remove a container with name CONTAINER (you can also use the
container id)
* docker rmi IMAGE : Remove an image by name / id
* docker container prune : Remove all stopped containers
* docker image prune : Remove all dangling images (untagged images)
    o -a : Remove all locally stored images
* docker push IMAGE : Push an image to DockerHub (or another registry) - the image name/
tag must include the repository name/ url
* docker pull IMAGE : Pull (download) an image from DockerHub (or another registry) - this
is done automatically if you just docker run IMAGE and the image wasn't pulled before

Data volumes:
=============
* docker run -v /path/in/container IMAGE : Create an Anonymous Volume inside a
Container
* docker run -v some-name:/path/in/container IMAGE : Create a Named Volume (named
some-name ) inside a Container
* docker run -v /path/on/your/host/machine:path/in/container IMAGE : Create a Bind
Mount and connect a local path on your host machine to some path in the Container
* docker volume ls : List all currently active / stored Volumes (by all Containers)
* docker volume create VOL_NAME : Create a new (Named) Volume named VOL_NAME . You
typically don't need to do that, since Docker creates them automatically for you if they don't
exist when running a container
* docker volume rm VOL_NAME : Remove a Volume by it's name (or ID)
* docker volume prune : Remove all unused Volumes (i.e. not connected to a currently
running or stopped container)

Networks:
=========
* docker run -network my-network --name cont1 my-image
* docker run -network my-network --name cont2 my-other-image

Docker Compose:
===============
* docker-compose up : Start all containers / services mentioned in the Docker Compose file
    o -d : Start in detached mode
    o --build : Force Docker Compose to re-evaluate / rebuild all images (otherwise, it only
does that if an image is missing)
* docker-compose down : Stop and remove all containers / services
    o -v : Remove all Volumes used for the Containers - otherwise they stay around, even if
the Containers are removed
